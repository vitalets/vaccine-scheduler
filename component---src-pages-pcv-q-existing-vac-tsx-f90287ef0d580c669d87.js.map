{"version":3,"file":"component---src-pages-pcv-q-existing-vac-tsx-f90287ef0d580c669d87.js","mappings":"2SAuBe,SAASA,IACtB,OAA8CC,EAAAA,EAAAA,WAAS,GAA/CC,EAAR,KAAwBC,EAAxB,KACA,GAA0CF,EAAAA,EAAAA,UAAwB,CAAE,CAAEG,KAAM,GAAIC,KAAM,MAA9EC,EAAR,KAAsBC,EAAtB,KAEMC,EAAoB,SAACC,EAAeC,EAAyBC,GACjEL,EAAaG,GAAOC,GAAQC,EAC5BJ,GAAgB,OAAID,KAgBtB,OACE,wBAAMM,SANW,SAACC,GAClBA,EAAMC,kBACNC,EAAAA,EAAAA,UAASb,EA3BU,eACD,6BA+BhB,gBAAC,KAAD,CAAMc,WAAS,EAACC,QAAS,GACvB,gBAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,IACb,gBAAC,IAAD,CAAYC,QAAQ,KAAKC,GAAI,CAAEC,GAAI,IAAnC,wDAKF,gBAAC,KAAD,CAAMJ,MAAI,EAACC,GAAI,IACb,gBAAC,IAAD,CAAaI,UAAU,YACrB,gBAAC,IAAD,CAAWA,UAAU,UAArB,wJAIA,gBAAC,IAAD,CACEC,KAAG,EACH,aAAW,sDACXnB,KAAK,UACLoB,SAAU,SAAAC,GAAC,OA5BIC,EA4BkBD,EAAEE,YA3B7CzB,EAA+B,QAAbwB,EAAGhB,OADG,IAACgB,IA8Bf,gBAAC,IAAD,CAAkBhB,MAAM,MAAMkB,QAAS,gBAAC,IAAD,CAAOC,UAAQ,IAAKC,MAAM,OACjE,gBAAC,IAAD,CAAkBpB,MAAM,KAAKkB,QAAS,gBAAC,IAAD,CAAOC,UAAQ,IAAKC,MAAM,WAKrE7B,GACC,gBAAC,KAAD,CAAMgB,MAAI,EAACC,GAAI,IACb,gBAAC,IAAD,CAAYC,QAAQ,KAAKC,GAAI,CAAEC,GAAI,IAAnC,6CAMHpB,GAAkBI,EAAa0B,KAAI,SAACC,EAAKxB,GACxC,OACE,gBAAC,KAAD,CAAMS,MAAI,EAACF,WAAS,EAACkB,IAAKzB,EAAOU,GAAI,GAAIF,QAAS,GAChD,gBAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,EAAGgB,GAAI,GACpB,gBAAC,IAAD,CACEJ,MAAM,gBACNpB,MAAOsB,EAAI7B,KACXqB,SAAU,SAAAC,GAAC,OAAIlB,EAAkBC,EAAO,OAAQiB,EAAEE,OAAOjB,QACzDyB,aAAa,MACbC,WAAS,EACTC,WAAY,CAAEC,QAAS,2BAA4BC,MAAO,cAC1DC,YAAY,gBAGhB,gBAAC,KAAD,CAAMvB,MAAI,EAACC,GAAI,EAAGgB,GAAI,GACpB,gBAAC,IAAD,CACEJ,MAAM,UACNpB,MAAOsB,EAAI5B,KACXoB,SAAU,SAAAC,GAAC,OAAIlB,EAAkBC,EAAO,OAAQiB,EAAEE,OAAOjB,QACzD0B,WAAS,EACTD,aAAa,SAGjB,gBAAC,KAAD,CAAMlB,MAAI,EAACC,GAAI,EAAGgB,GAAI,QAM3BjC,GACC,gCACE,gBAAC,KAAD,CAAMgB,MAAI,EAACC,GAAI,EAAGgB,GAAI,GACpB,gBAAC,IAAD,CAAQO,QAhFL,WACbnC,EAAgBD,EAAaqC,OAAO,CAAC,CAAEvC,KAAM,GAAIC,KAAM,QA+EpBgC,WAAS,EAACjB,QAAQ,YAAYwB,MAAM,aAA7D,qBAEF,gBAAC,KAAD,CAAM1B,MAAI,EAACC,GAAI,EAAGgB,GAAI,KAI1B,gBAAC,IAAD,CAAiBU,SAxGR,gBAwG4BC,aAAa","sources":["webpack://vaccine-scheduler/./src/pages/pcv/q-existing-vac.tsx"],"sourcesContent":["import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Button from '@mui/material/Button';\nimport { navigate } from 'gatsby';\nimport FormControl from '@mui/material/FormControl/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Radio from '@mui/material/Radio';\nimport PrevNextButtons from './_PrevNextButtons';\nimport TextField from '@mui/material/TextField';\nimport { useState } from 'react';\n\nconst prevPage = '../q-free-vac';\nconst nextPageHasVac = '../r-has-vac';\nconst nextPageNoVac = '../q-existing-vac-state';\n\nexport interface ExistingVac {\n  date: string;\n  name: string;\n}\n\nexport default function QExistingVac() {\n  const [ hasExistingVac, setHasExistingVac ] = useState(false);\n  const [ existingVacs, setExistingVacs ] = useState<ExistingVac[]>([ { date: '', name: '' } ]);\n\n  const updateExistingVac = (index: number, prop: keyof ExistingVac, value: string) => {\n    existingVacs[index][prop] = value;\n    setExistingVacs([...existingVacs]);\n  };\n\n  const addRow = () => {\n    setExistingVacs(existingVacs.concat([{ date: '', name: '' }]));\n  };\n\n  const handleChangeRadio = (el: HTMLInputElement) => {\n    setHasExistingVac(el.value === 'yes');\n  };\n\n  const handleNext = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    navigate(hasExistingVac ? nextPageHasVac : nextPageNoVac);\n  };\n\n  return (\n    <form onSubmit={handleNext}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\" sx={{ mt: 2 }}>\n            У вас уже есть прививка от пневмококковой инфекции?\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n              Выбирайте да, если есть хотя бы одна (вне зависимости от того, когда была сделана прививка).\n              Названия вакцин: “Превенар”, “Пневмо 23”, “Пневмовакс”.\n            </FormLabel>\n            <RadioGroup\n              row\n              aria-label=\"У вас уже есть прививка от пневмококковой инфекции?\"\n              name=\"has-vac\"\n              onChange={e => handleChangeRadio(e.target)}\n            >\n              <FormControlLabel value=\"yes\" control={<Radio required />} label=\"Да\" />\n              <FormControlLabel value=\"no\" control={<Radio required />} label=\"Нет\" />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n        {hasExistingVac &&\n          <Grid item xs={12}>\n            <Typography variant=\"h5\" sx={{ mt: 2 }}>\n              Укажите даты и названия введённых вакцин\n            </Typography>\n          </Grid>\n        }\n\n        {hasExistingVac && existingVacs.map((val, index) => {\n          return (\n            <Grid item container key={index} xs={12} spacing={2}>\n              <Grid item xs={6} sm={3}>\n                <TextField\n                  label=\"Дата введения\"\n                  value={val.date}\n                  onChange={e => updateExistingVac(index, 'date', e.target.value)}\n                  autoComplete=\"off\"\n                  fullWidth\n                  inputProps={{ pattern: '\\\\d{2}\\\\.\\\\d{2}\\\\.\\\\d{4}', title: 'дд.мм.гггг' }}\n                  placeholder=\"дд.мм.гггг\"\n                />\n              </Grid>\n              <Grid item xs={6} sm={3}>\n                <TextField\n                  label=\"Вакцина\"\n                  value={val.name}\n                  onChange={e => updateExistingVac(index, 'name', e.target.value)}\n                  fullWidth\n                  autoComplete=\"off\"\n                />\n              </Grid>\n              <Grid item xs={6} sm={6}></Grid>\n            </Grid>\n          );\n        })\n        }\n\n        {hasExistingVac &&\n          <>\n            <Grid item xs={6} sm={6}>\n              <Button onClick={addRow} fullWidth variant=\"contained\" color=\"secondary\">Добавить строчку</Button>\n            </Grid>\n            <Grid item xs={6} sm={6}></Grid>\n          </>\n        }\n\n        <PrevNextButtons prevPage={prevPage} nextEnabled={true} />\n      </Grid>\n    </form>\n  );\n}\n"],"names":["QExistingVac","useState","hasExistingVac","setHasExistingVac","date","name","existingVacs","setExistingVacs","updateExistingVac","index","prop","value","onSubmit","event","preventDefault","navigate","container","spacing","item","xs","variant","sx","mt","component","row","onChange","e","el","target","control","required","label","map","val","key","sm","autoComplete","fullWidth","inputProps","pattern","title","placeholder","onClick","concat","color","prevPage","nextEnabled"],"sourceRoot":""}